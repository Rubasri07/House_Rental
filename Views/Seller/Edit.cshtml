@model House_Rental_System.Models.Property_Details

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_SellerLayout.cshtml";
}

<head>

    <link href="~/assets/form/css/style.css" rel="stylesheet" />
    <link href="~/assets/form/fonts/material-design-iconic-font/css/material-design-iconic-font.min.css" rel="stylesheet" />
</head>


<div class="wrapper">
    <div class="inner">
        @using (Html.BeginForm("Edit", "Seller", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <h3>House Details</h3>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Type</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model=>model.Property_Type, ViewData["type"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Type, "", new { @class = "text-danger" })
                        <i class="zmdi zmdi-home"></i>
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Name</label>
                    <div class="form-holder">
                        <i class="fas fa-house-user"></i>
                        @Html.EditorFor(model => model.Property_Name, new { htmlAttributes = new { @class = "form-control text-capitalize" } })
                        @Html.ValidationMessageFor(model => model.Property_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Address</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-pin"></i>
                        @Html.EditorFor(model => model.Property_Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">State</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-city"></i>
                        @Html.EditorFor(model => model.Property_State, new { htmlAttributes = new { @class = "form-control text-capitalize" } })
                        @Html.ValidationMessageFor(model => model.Property_State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">City</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-city"></i>
                        @Html.EditorFor(model => model.Property_City, new { htmlAttributes = new { @class = "form-control text-capitalize" } })
                        @Html.ValidationMessageFor(model => model.Property_City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Pin</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-pin"></i>
                        @Html.EditorFor(model => model.Property_Pin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Pin, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Expected Rent</label>
                    <div class="form-holder">
                        <i class="fa fa-rupee"></i>
                        @Html.EditorFor(model => model.Property_Information.ExpectedRent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.ExpectedRent, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Expected Deposit</label>
                    <div class="form-holder">
                        <i class="fa fa-rupee"></i>
                        @Html.EditorFor(model => model.Property_Information.Expected_Deposit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.Expected_Deposit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">BHK</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model=>model.Property_Information.BHK, ViewData["bhk"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Information.BHK, "", new { @class = "text-danger" })
                        <i class="fa fa-bed"></i>
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Facing</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model=>model.Property_Information.Facing, ViewData["facing"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Information.Facing, "", new { @class = "text-danger" })
                        <i class="zmdi zmdi-arrows"></i>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Furnishing</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model => model.Property_Information.Furnishing, ViewData["furnish"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Information.Furnishing, "", new { @class = "text-danger" })
                        <i class="fa fa-bed"></i>
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Preferred Tenants</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model => model.Property_Information.Preferred_Tenants, ViewData["tenant"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Information.Preferred_Tenants, "", new { @class = "text-danger" })
                        <i class="zmdi zmdi-face"></i>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Property Age</label>
                    <div class="form-holder">
                        <i class="fa fa-font"></i>
                        @Html.EditorFor(model => model.Property_Information.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.Age, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Size</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-ruler"></i>
                        @Html.EditorFor(model => model.Property_Information.Size, new { htmlAttributes = new { @class = "form-control", placeholder = "in sqft" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.Size, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Floor</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-city"></i>
                        @Html.EditorFor(model => model.Property_Information.Floor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.Floor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Total Floor</label>
                    <div class="form-holder">
                        <i class="zmdi zmdi-city"></i>
                        @Html.EditorFor(model => model.Property_Information.Total_Floor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Property_Information.Total_Floor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-wrapper">
                    <label for="">Parking</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model => model.Property_Information.Parking, ViewData["parking"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Information.Parking, "", new { @class = "text-danger" })
                        <i class="zmdi zmdi-car"></i>
                    </div>
                </div>
                <div class="form-wrapper">
                    <label for="">Status</label>
                    <div class="form-holder select">
                        @Html.DropDownListFor(model => model.Property_Status, ViewData["status"] as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Property_Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
            <center>
                <button class="btn fa fa-edit" type="submit" style="background-color: rgb(0 122 204); color: white">  Edit</button>
            </center>


        }
    </div>

</div>
    
<center>
    <h3>ADD Images</h3>
    @using (Html.BeginForm("Addimage", "Seller",new { id = Model.Property_Id }, FormMethod.Post, new {  enctype = "multipart/form-data"}))
    {
        <input type="file" multiple name="addimage" />
        <button type="submit" class="btn fa fa-plus"style="background-color: rgb(0 122 204); color: white;">Add</button>
    }
</center>

<div class="container" style="margin-top:1%;">
    <div class="row">
        @foreach (var item in Model.Property_Images)
        {

            <div class="col-sm-4">
                <div class="card">
                    @{
                        var images = item;
                        if (images!=null)
                        {
                            var base64 = Convert.ToBase64String(images.Image);
                            var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                            <img src='@imgsrc' style="height:200px;width:100%;border-radius:5px;" />
                        }

                    }
                    <div class="card-body">
                        <a href="~/Seller/DeleteImages/@item.img_id" class="btn" style="background-color: rgb(0 122 204); color: white;">  Delete</a>
                    </div>
                </div>
            </div>


        }
    </div>
</div>
